@use '@material/dialog' as mdc-dialog;
@use '../mdc-helpers/mdc-helpers';
@use '../../material/core/typography/typography';
@use '../../material/core/theming/theming';

@mixin color($config-or-theme) {
  $config: theming.get-color-config($config-or-theme);
  @include mdc-helpers.mat-using-mdc-theme($config) {
    // Save original values of MDC global variables. We need to save these so we can restore the
    // variables to their original values and prevent unintended side effects from using this mixin.
    $orig-content-ink-opacity: mdc-dialog.$content-ink-opacity;

    mdc-dialog.$content-ink-opacity: 1;
    @include mdc-dialog.core-styles($query: mdc-helpers.$mat-theme-styles-query);

    // Restore original values of MDC global variables.
    mdc-dialog.$content-ink-opacity: $orig-content-ink-opacity;
  }
}

@mixin typography($config-or-theme) {
  $config: typography.private-typography-to-2018-config(
      theming.get-typography-config($config-or-theme));
  @include mdc-helpers.mat-using-mdc-typography($config) {
    @include mdc-dialog.core-styles($query: mdc-helpers.$mat-typography-styles-query);
  }
}

@mixin density($config-or-theme) {
  $density-scale: theming.get-density-config($config-or-theme);
}

@mixin theme($theme-or-color-config) {
  $theme: theming.private-legacy-get-theme($theme-or-color-config);
  @include theming.private-check-duplicate-theme-styles($theme, 'mat-mdc-dialog') {
    $color: theming.get-color-config($theme);
    $density: theming.get-density-config($theme);
    $typography: theming.get-typography-config($theme);

    @if $color != null {
      @include color($color);
    }
    @if $density != null {
      @include density($density);
    }
    @if $typography != null {
      @include typography($typography);
    }
  }
}
