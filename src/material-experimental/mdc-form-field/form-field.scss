// TODO(devversion): do not import all text-field styles. Use feature targeting once available.
@import '@material/textfield/mdc-text-field';
@import '@material/textfield/variables';
@import '_form-field-variables';

.mat-mdc-form-field {
  display: inline-flex;
  // this container contains the text-field and the subscript. The subscript
  // should be displayed below the text-field. Hence the column direction.
  flex-direction: column;
  vertical-align: middle;
}

// Element that wraps the MDC text-field.
.mat-mdc-text-field-wrapper {
  flex: auto;
  height: auto;

  .mdc-floating-label {
    // By default, MDC aligns the label using percentage. This will be overwritten based
    // on whether a textarea is used. This is not possible in our implementation of the
    // form-field because we do not know what type of form-field control is set up. Hence
    // we always use a fixed position for the label. This does not have any implications.
    top: $mat-form-field-baseline;
  }
}

// Container that contains the prefixes, infix and suffixes. These elements should
// be aligned vertically in the middle and in a single row.
.mat-mdc-form-field-flex {
  display: inline-flex;
  align-items: baseline;
  box-sizing: border-box;
  width: 100%;
}

// Infix that contains the projected content (usually an input or a textarea). We ensure
// that the projected form-field control and content can stretch as needed, but we also
// apply a default infix width to make the form-field's look natural.
.mat-mdc-form-field-infix {
  flex: auto;
  min-width: 0;
  width: $mat-form-field-default-infix-width;
  // Needed so that the floating label does not overlap with prefixes or suffixes.
  position: relative;
}

// Bottom line for form-fields. MDC by default only has a bottom-line for inputs
// and textarea's. This does not work for us because we support abstract form-field
// controls which might not render an input or textarea. Additionally, the default MDC
// bottom-line does only cover the width of the input, while we also want it to cover
// prefixes and suffixes.
.mat-mdc-form-field-bottom-line {
  position: absolute;
  bottom: 0;
  width: 100%;
  height: 1px;
  border-bottom-width: 1px;
  border-bottom-style: solid;
}

.mat-mdc-input-element {
  // By default, MDC limits the height of a form-field to the height of an input, and
  // overwrites the height to "auto" if a textarea is used. As mentioned in the comment
  // above for the floating label, we do not know what type of control is used, so we
  // shift the fixed height to the actual input element and let the form-field adjust
  // based on the needed height. This makes it work for both input and textarea.
  height: $mdc-text-field-height;

  // Unset the border set by MDC. We move the border (which serves as the Material Design
  // text-field bottom line) into its own element. This is necessary because we want the
  // bottom-line to span across the whole form-field (including prefixes and suffixes).
  border: none;
}

// The default MDC text-field implementation does not support labels which always float.
// MDC only renders the placeholder if the input is focused. We extend this to show the
// placeholder if the form-field label is set to always float.
// TODO(devversion): consider getting a mixin or variables for this (currently not available).
// Stylelint no-prefixes rule disabled because MDC text-field only uses "::placeholder" too.
/* stylelint-disable-next-line material/no-prefixes */
.mat-mdc-form-field-label-always-float .mdc-text-field__input::placeholder {
  transition-delay: 40ms;
  transition-duration: 110ms;
  opacity: 1;
}

// Always hide the asterisk displayed by MDC. This is necessary because MDC can only display
// the asterisk if the label is directly preceded by the input. MDC does this because it
// relies on CSS to figure out if the input/textarea is required. This does not apply for us
// because it's not guaranteed that the form control is an input/textarea. The required state
// is handled as part of the registered form-field control instance. The asterisk will be
// rendered conditionally through the floating label.
.mat-mdc-form-field .mdc-floating-label::after {
  display: none;
}

// #########################################
// #            Textarea styles            #
// #########################################

// MDCs default textarea styles cannot be used because they only apply if a special
// class is applied to the "mdc-text-field" wrapper. Since we cannot know whether the
// registered form-field control is a textarea and MDC by default does not have styles
// for textarea's in the standard appearance, we add our own minimal textarea styles
// which are scoped to the actual textarea element (i.e. not require a class in the
// text-field wrapper) and integrate better with the standard appearance.

.mat-mdc-text-field-wrapper .mat-mdc-textarea-input {
  resize: vertical;
  box-sizing: border-box;
  height: auto;
  margin: $mat-form-field-baseline -4px $mat-form-field-textarea-vertical-inset;
  padding: 0 $mat-form-field-textarea-horizontal-inset + 4px;
  border: none;
}

.mdc-text-field--outlined .mat-mdc-textarea-input {
  // For textarea's in the outline appearance, the top margin needs to be reduced because
  // the floating label overflows the text-field boundaries by 50% and less spacing is needed.
  margin-top: $mat-form-field-label-height / 2 + $mat-form-field-textarea-vertical-inset;
}

// #########################################
// #            Subscript                  #
// #########################################

// Wrapper for the hints and error messages.
.mat-mdc-form-field-subscript-wrapper {
  box-sizing: border-box;
  width: 100%;
  // prevents multi-line errors from overlapping the control.
  overflow: hidden;
}

// Scale down icons in the subscript to be the same size as the text.
.mat-mdc-form-field-subscript-wrapper .mat-icon {
  width: 1em;
  height: 1em;
  font-size: inherit;
  vertical-align: baseline;
}

// Clears the floats on the hints. This is necessary for the hint animation to work.
.mat-mdc-form-field-hint-wrapper {
  display: flex;
}

// Spacer used to make sure start and end hints have enough space between them.
.mat-mdc-form-field-hint-spacer {
  flex: 1 0 $mat-form-field-hint-min-space;
}

// Single error message displayed beneath the form field underline.
.mat-mdc-form-field-error {
  display: block;
}
