@import 'default-theme';

// This refers to the thickness of the slider. On a horizontal slider this is the height, on a
// vertical slider this is the width.
$slider-thickness: 20px !default;
$slider-min-size: 128px !default;

$slider-track-height: 2px !default;
$slider-thumb-size: 20px !default;

$slider-thumb-default-scale: 0.7 !default;
$slider-thumb-focus-scale: 1 !default;

// TODO(iveysaur): Find an implementation to hide the track under a disabled thumb.
$slider-off-color: rgba(black, 0.26);
$slider-focused-color: rgba(black, 0.38);
$slider-disabled-color: rgba(black, 0.26);

/**
 * Uses a container height and an item height to center an item vertically within the container.
 */
@function center-vertically($containerHeight, $itemHeight) {
  @return ($containerHeight / 2) - ($itemHeight / 2);
}

/**
 * Positions the thumb based on its width and height.
 */
@mixin slider-thumb-position($width: $slider-thumb-size, $height: $slider-thumb-size) {
  position: absolute;
  top: center-vertically($slider-thickness, $height);
  width: $width;
  height: $height;
  border-radius: max($width, $height);
}

md-slider {
  height: $slider-thickness;
  min-width: $slider-min-size;
  position: relative;
  padding: 0;
  display: inline-block;
  outline: none;
  vertical-align: middle;
}

md-slider *,
md-slider *::after {
  box-sizing: border-box;
}

/**
 * Exists in order to pad the slider and keep everything positioned correctly.
 * Cannot be merged with the .md-slider-container.
 */
.md-slider-wrapper {
  width: 100%;
  height: 100%;
  padding-left: 8px;
  padding-right: 8px;
}

/**
 * Holds the isActive and isDragging classes as well as help with positioning the children.
 * Cannot be merged with .md-slider-wrapper.
 */
.md-slider-container {
  position: relative;
}

.md-slider-track-container {
  width: 100%;
  position: absolute;
  top: center-vertically($slider-thickness, $slider-track-height);
  height: $slider-track-height;
}

.md-slider-track {
  position: absolute;
  left: 0;
  right: 0;
  height: 100%;
  background-color: $slider-off-color;
}

.md-slider-track-fill {
  transition-duration: 400ms;
  transition-timing-function: cubic-bezier(0.25, 0.8, 0.25, 1);
  transition-property: width, height;
  background-color: md-color($md-accent);
}

.md-slider-thumb-container {
  position: absolute;
  left: 0;
  top: 50%;
  transform: translate3d(-50%, -50%, 0);
  transition-duration: 400ms;
  transition-timing-function: cubic-bezier(0.25, 0.8, 0.25, 1);
  transition-property: left, bottom;
}

.md-slider-thumb-position {
  transition: transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1);
}

.md-slider-thumb {
  z-index: 1;

  @include slider-thumb-position($slider-thumb-size, $slider-thumb-size);
  transform: scale($slider-thumb-default-scale);
  transition: transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1);
}

.md-slider-thumb::after {
  content: '';
  position: absolute;
  width: $slider-thumb-size;
  height: $slider-thumb-size;
  border-radius: max($slider-thumb-size, $slider-thumb-size);
  border-width: 3px;
  border-style: solid;
  transition: inherit;
  background-color: md-color($md-accent);
  border-color: md-color($md-accent);
}

.md-slider-dragging .md-slider-thumb-position,
.md-slider-dragging .md-slider-track-fill {
  transition: none;
}

.md-slider-active .md-slider-thumb {
  transform: scale($slider-thumb-focus-scale);
}

.md-slider-disabled .md-slider-thumb::after {
  background-color: $slider-disabled-color;
  border-color: $slider-disabled-color;
}
