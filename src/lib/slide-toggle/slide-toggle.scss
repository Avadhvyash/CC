@import 'variables';
@import 'mixins';
@import 'elevation';

//TODO(): remove the default theme.
@import 'default-theme';

$mat-slide-toggle-width: 36px !default;
$mat-slide-toggle-height: 24px !default;
$mat-slide-toggle-bar-height: 14px !default;
$mat-slide-toggle-thumb-size: 20px !default;
$mat-slide-toggle-margin: 16px !default;

@mixin mat-switch-checked($palette) {
  &.mat-checked {
    .mat-slide-toggle-thumb {
      background-color: mat-color($palette);
    }

    .mat-slide-toggle-bar {
      background-color: mat-color($palette, 0.5);
    }
  }
}

@mixin mat-switch-ripple($palette) {
  // Temporary ripple effect for the thumb of the slide-toggle.
  // Bind to the parent selector and specify the current palette.
  @include mat-temporary-ink-ripple(slide-toggle, true, $palette);

  &.mat-slide-toggle-focused {
    &:not(.mat-checked) .mat-ink-ripple {
      // When the slide-toggle is not checked and it shows its focus indicator, it should use a 12% opacity
      // of black in light themes and 12% of white in dark themes.
      background-color: mat-color($mat-foreground, divider);
    }
  }
}

:host {
  display: flex;
  height: $mat-slide-toggle-height;

  margin: $mat-slide-toggle-margin 0;
  line-height: $mat-slide-toggle-height;

  white-space: nowrap;
  user-select: none;

  outline: none;

  &.mat-checked {
    .mat-slide-toggle-thumb-container {
      transform: translate3d(100%, 0, 0);
    }
  }

  @include mat-switch-checked($mat-accent);
  @include mat-switch-ripple($mat-accent);

  &.mat-primary {
    @include mat-switch-checked($mat-primary);
    @include mat-switch-ripple($mat-primary);
  }

  &.mat-warn {
    @include mat-switch-checked($mat-warn);
    @include mat-switch-ripple($mat-warn);
  }

  &.mat-disabled {

    .mat-slide-toggle-label, .mat-slide-toggle-container {
      cursor: default;
    }

    .mat-slide-toggle-thumb {
      // The thumb of the slide-toggle always uses the hue 400 of the grey palette in dark or light themes.
      // Since this is very specific to the slide-toggle component, we're not providing
      // it in the background palette.
      background-color: mat-color($mat-grey, 400);
    }
    .mat-slide-toggle-bar {
      background-color: mat-color($mat-foreground, divider);
    }
  }
}

// The content element is responsible for the users content.
// It will apply the given typography styles and align at the end of the slide-toggle.
.mat-slide-toggle-content {
  font-size: $mat-body-font-size-base;
  font-family: $mat-font-family;
  font-weight: 500;
}

// The label element is our root container for the slide-toggle / switch indicator and label text.
// It has to be a label, to support accessibility for the visual hidden input.
.mat-slide-toggle-label {
  display: flex;
  flex: 1;

  cursor: pointer;
}

// Container for the composition of the slide-toggle / switch indicator.
.mat-slide-toggle-container {
  cursor: grab;
  width: $mat-slide-toggle-width;
  height: $mat-slide-toggle-height;

  position: relative;
  user-select: none;

  margin-right: 8px;
}

// The thumb container is responsible for the dragging functionality.
// It moves around and holds the actual circle as a thumb.
.mat-slide-toggle-thumb-container {
  position: absolute;
  top: $mat-slide-toggle-height / 2 - $mat-slide-toggle-thumb-size / 2;
  left: 0;
  z-index: 1;

  width: $mat-slide-toggle-width - $mat-slide-toggle-thumb-size;

  transform: translate3d(0, 0, 0);

  transition: $swift-linear;
  transition-property: transform;

  // Once the thumb container is being dragged around, we remove the transition duration to
  // make the drag feeling fast and not delayed.
  &.mat-dragging {
    transition-duration: 0ms;
  }
}

// The thumb will be elevated from the slide-toggle bar.
// Also the thumb is bound to its parent thumb-container, which manages the movement of the thumb.
.mat-slide-toggle-thumb {
  position: absolute;
  margin: 0;
  left: 0;
  top: 0;

  height: $mat-slide-toggle-thumb-size;
  width: $mat-slide-toggle-thumb-size;
  border-radius: 50%;

  background-color: mat-color($mat-background, background);
  @include mat-elevation(1);
}

// Horizontal bar for the slide-toggle.
// The slide-toggle bar is shown behind the thumb container.
.mat-slide-toggle-bar {
  position: absolute;
  left: 1px;
  top: $mat-slide-toggle-height / 2 - $mat-slide-toggle-bar-height / 2;

  width: $mat-slide-toggle-width - 2px;
  height: $mat-slide-toggle-bar-height;

  // The bar of the slide-toggle always uses the hue 500 of the grey palette in dark or light themes.
  // Since this is very specific to the slide-toggle component, we're not providing
  // it in the background palette.
  background-color: mat-color($mat-grey, 500);

  border-radius: 8px;
}

// The slide toggle shows a visually hidden checkbox inside of the component.
// This checkbox allows us to take advantage of the browsers support.
// Like accessibility and keyboard interaction.
.mat-slide-toggle-checkbox {
  @include mat-visually-hidden();
}

.mat-slide-toggle-bar,
.mat-slide-toggle-thumb {
  transition: $swift-linear;
  transition-property: background-color;
  transition-delay: 50ms;
}
