@use 'sass:map';
@use '../style/sass-utils';
@use '../tokens/token-utils';


/// Generates custom tokens for the mdc-chip. (MDC has a chip component, but they
/// seem to have made up the tokens rather than using ones generated from the token database,
/// therefore we need a custom token function for it).
/// @param {Map} $systems The MDC system tokens
/// @param {Boolean} $exclude-hardcoded Whether to exclude hardcoded token values
/// @return {Map} A set of custom tokens for the mdc-chip
@function mdc-chip($systems, $exclude-hardcoded) {
  @return sass-utils.merge-all(
    token-utils.generate-typography-tokens($systems, label-text, label-large),
    (
      container-shape: token-utils.hardcode((
        family: rounded,
        radius: 8px,
      ), $exclude-hardcoded),
      with-avatar-avatar-size: token-utils.hardcode(24px, $exclude-hardcoded),
      label-text-color: map.get($systems, md-sys-color, on-surface-variant),
      disabled-label-text-color: sass-utils.safe-color-change(
        map.get($systems, md-sys-color, on-surface),
        $alpha: 0.38,
      ),
      with-icon-icon-size: token-utils.hardcode(18px, $exclude-hardcoded),
      with-icon-icon-color: map.get($systems, md-sys-color, on-surface-variant),
      with-icon-disabled-icon-color: map.get($systems, md-sys-color, on-surface),
      with-icon-selected-icon-color: map.get($systems, md-sys-color, on-secondary-container),
      with-trailing-icon-trailing-icon-color: map.get($systems, md-sys-color, on-surface-variant),
      with-trailing-icon-disabled-trailing-icon-color: map.get($systems, md-sys-color, on-surface),
      focus-state-layer-opacity: map.get($systems, md-sys-state, focus-state-layer-opacity),
      focus-state-layer-color: map.get($systems, md-sys-color, on-surface-variant),
      outline-width: token-utils.hardcode(1px, $exclude-hardcoded),
      outline-color: map.get($systems, md-sys-color, outline),
      disabled-outline-color: sass-utils.safe-color-change(
        map.get($systems, md-sys-color, on-surface),
        $alpha: 0.12,
      ),
      focus-outline-color: map.get($systems, md-sys-color, on-surface-variant),
      hover-state-layer-color: map.get($systems, md-sys-color, on-surface-variant),
      hover-state-layer-opacity: map.get($systems, md-sys-state, hover-state-layer-opacity),
      with-avatar-disabled-avatar-opacity: token-utils.hardcode(0.38, $exclude-hardcoded),
      elevated-selected-container-color: map.get($systems, md-sys-color, secondary-container),
      flat-selected-outline-width: token-utils.hardcode(0, $exclude-hardcoded),
      selected-label-text-color: map.get($systems, md-sys-color, on-secondary-container),
      flat-disabled-selected-container-color: sass-utils.safe-color-change(
        map.get($systems, md-sys-color, on-surface),
        $alpha: 0.12,
      ),
      selected-hover-state-layer-color: map.get($systems, md-sys-color, on-secondary-container),
      selected-hover-state-layer-opacity:
        map.get($systems, md-sys-state, hover-state-layer-opacity),
      selected-focus-state-layer-color: map.get($systems, md-sys-color, on-secondary-container),
      selected-focus-state-layer-opacity:
        map.get($systems, md-sys-state, focus-state-layer-opacity),
      with-icon-disabled-icon-opacity: token-utils.hardcode(0.38, $exclude-hardcoded),
      with-trailing-icon-disabled-trailing-icon-opacity:
        token-utils.hardcode(0.38, $exclude-hardcoded),
    ),
  ), (
    // Color variants:
    primary: (
      with-icon-selected-icon-color: map.get($systems, md-sys-color, on-primary-container),
      elevated-selected-container-color: map.get($systems, md-sys-color, primary-container),
      selected-label-text-color: map.get($systems, md-sys-color, on-primary-container),
      selected-hover-state-layer-color: map.get($systems, md-sys-color, on-primary-container),
      selected-focus-state-layer-color: map.get($systems, md-sys-color, on-primary-container),
    ),
    secondary: (), // Default, no overrides needed.
    tertiary: (
      with-icon-selected-icon-color: map.get($systems, md-sys-color, on-tertiary-container),
      elevated-selected-container-color: map.get($systems, md-sys-color, tertiary-container),
      selected-label-text-color: map.get($systems, md-sys-color, on-tertiary-container),
      selected-hover-state-layer-color: map.get($systems, md-sys-color, on-tertiary-container),
      selected-focus-state-layer-color: map.get($systems, md-sys-color, on-tertiary-container),
    ),
    error: (
      with-icon-selected-icon-color: map.get($systems, md-sys-color, on-error-container),
      elevated-selected-container-color: map.get($systems, md-sys-color, error-container),
      selected-label-text-color: map.get($systems, md-sys-color, on-error-container),
      selected-hover-state-layer-color: map.get($systems, md-sys-color, on-error-container),
      selected-focus-state-layer-color: map.get($systems, md-sys-color, on-error-container),
    )
  );
}

/// Generates custom tokens for the mdc-tab-indicator. (MDC has a tab-indicator component, but they
/// seem to have made up the tokens rather than using ones generated from the token database,
/// therefore we need a custom token function for it).
/// @param {Map} $systems The MDC system tokens
/// @param {Boolean} $exclude-hardcoded Whether to exclude hardcoded token values
/// @return {Map} A set of custom tokens for the mdc-tab-indicator
@function tab-indicator($systems, $exclude-hardcoded) {
  @return ((
    active-indicator-height: token-utils.hardcode(2px, $exclude-hardcoded),
    active-indicator-shape: token-utils.hardcode(0, $exclude-hardcoded),
    active-indicator-color: map.get($systems, md-sys-color, primary),
  ), (
    // Color variants
    primary: (), // Default, no overrides needed
    secondary: (
      active-indicator-color: map.get($systems, md-sys-color, secondary),
    ),
    tertiary: (
      active-indicator-color: map.get($systems, md-sys-color, tertiary),
    ),
    error: (
      active-indicator-color: map.get($systems, md-sys-color, error),
    )
  ));
}

/// Generates custom token overrides for the mdc-checkbox color variants.
/// @param {Map} $systems The MDC system tokens
/// @param {Boolean} $exclude-hardcoded Whether to exclude hardcoded token values
/// @return {Map} A set of color variant token overrides for the mdc-checkbox
@function mdc-checkbox-color-variants($systems, $exclude-hardcoded) {
  @return (
    primary: (), // Default, no overrides needed
    secondary: (
      selected-container-color: map.get($systems, md-sys-color, secondary),
      selected-focus-container-color: map.get($systems, md-sys-color, secondary),
      selected-focus-icon-color: map.get($systems, md-sys-color, on-secondary),
      selected-focus-state-layer-color: map.get($systems, md-sys-color, secondary),
      selected-hover-container-color: map.get($systems, md-sys-color, secondary),
      selected-hover-icon-color: map.get($systems, md-sys-color, on-secondary),
      selected-hover-state-layer-color: map.get($systems, md-sys-color, secondary),
      selected-icon-color: map.get($systems, md-sys-color, on-secondary),
      selected-pressed-container-color: map.get($systems, md-sys-color, secondary),
      selected-pressed-icon-color: map.get($systems, md-sys-color, on-secondary),
      unselected-pressed-state-layer-color: map.get($systems, md-sys-color, secondary),
    ),
    tertiary: (
      selected-container-color: map.get($systems, md-sys-color, tertiary),
      selected-focus-container-color: map.get($systems, md-sys-color, tertiary),
      selected-focus-icon-color: map.get($systems, md-sys-color, on-tertiary),
      selected-focus-state-layer-color: map.get($systems, md-sys-color, tertiary),
      selected-hover-container-color: map.get($systems, md-sys-color, tertiary),
      selected-hover-icon-color: map.get($systems, md-sys-color, on-tertiary),
      selected-hover-state-layer-color: map.get($systems, md-sys-color, tertiary),
      selected-icon-color: map.get($systems, md-sys-color, on-tertiary),
      selected-pressed-container-color: map.get($systems, md-sys-color, tertiary),
      selected-pressed-icon-color: map.get($systems, md-sys-color, on-tertiary),
      unselected-pressed-state-layer-color: map.get($systems, md-sys-color, tertiary),
    ),
    error: (
      selected-container-color: map.get($systems, md-sys-color, error),
      selected-focus-container-color: map.get($systems, md-sys-color, error),
      selected-focus-icon-color: map.get($systems, md-sys-color, on-error),
      selected-focus-state-layer-color: map.get($systems, md-sys-color, error),
      selected-hover-container-color: map.get($systems, md-sys-color, error),
      selected-hover-icon-color: map.get($systems, md-sys-color, on-error),
      selected-hover-state-layer-color: map.get($systems, md-sys-color, error),
      selected-icon-color: map.get($systems, md-sys-color, on-error),
      selected-pressed-container-color: map.get($systems, md-sys-color, error),
      selected-pressed-icon-color: map.get($systems, md-sys-color, on-error),
      unselected-pressed-state-layer-color: map.get($systems, md-sys-color, error),
    )
  );
}

/// Generates custom token overrides for the mdc-slider color variants.
/// @param {Map} $systems The MDC system tokens
/// @param {Boolean} $exclude-hardcoded Whether to exclude hardcoded token values
/// @return {Map} A set of color variant token overrides for the mdc-slider
@function mdc-slider-color-variants($systems, $exclude-hardcoded) {
  @return (
    primary: (), // Default, no overrides needed
    secondary: (
      active-track-color: map.get($systems, md-sys-color, secondary),
      focus-handle-color: map.get($systems, md-sys-color, secondary),
      focus-state-layer-color: map.get($systems, md-sys-color, secondary),
      handle-color: map.get($systems, md-sys-color, secondary),
      hover-handle-color: map.get($systems, md-sys-color, secondary),
      hover-state-layer-color: map.get($systems, md-sys-color, secondary),
      label-container-color: map.get($systems, md-sys-color, secondary),
      label-label-text-color: map.get($systems, md-sys-color, on-secondary),
      pressed-handle-color: map.get($systems, md-sys-color, secondary),
      pressed-state-layer-color: map.get($systems, md-sys-color, secondary),
      with-overlap-handle-outline-color: map.get($systems, md-sys-color, on-secondary),
      with-tick-marks-active-container-color: map.get($systems, md-sys-color, on-secondary),
    ),
    tertiary: (
      active-track-color: map.get($systems, md-sys-color, tertiary),
      focus-handle-color: map.get($systems, md-sys-color, tertiary),
      focus-state-layer-color: map.get($systems, md-sys-color, tertiary),
      handle-color: map.get($systems, md-sys-color, tertiary),
      hover-handle-color: map.get($systems, md-sys-color, tertiary),
      hover-state-layer-color: map.get($systems, md-sys-color, tertiary),
      label-container-color: map.get($systems, md-sys-color, tertiary),
      label-label-text-color: map.get($systems, md-sys-color, on-tertiary),
      pressed-handle-color: map.get($systems, md-sys-color, tertiary),
      pressed-state-layer-color: map.get($systems, md-sys-color, tertiary),
      with-overlap-handle-outline-color: map.get($systems, md-sys-color, on-tertiary),
      with-tick-marks-active-container-color: map.get($systems, md-sys-color, on-tertiary),
    ),
    error: (
      active-track-color: map.get($systems, md-sys-color, error),
      focus-handle-color: map.get($systems, md-sys-color, error),
      focus-state-layer-color: map.get($systems, md-sys-color, error),
      handle-color: map.get($systems, md-sys-color, error),
      hover-handle-color: map.get($systems, md-sys-color, error),
      hover-state-layer-color: map.get($systems, md-sys-color, error),
      label-container-color: map.get($systems, md-sys-color, error),
      label-label-text-color: map.get($systems, md-sys-color, on-error),
      pressed-handle-color: map.get($systems, md-sys-color, error),
      pressed-state-layer-color: map.get($systems, md-sys-color, error),
      with-overlap-handle-outline-color: map.get($systems, md-sys-color, on-error),
      with-tick-marks-active-container-color: map.get($systems, md-sys-color, on-error),
    ),
  );
}

/// Generates custom token overrides for the mdc-switch color variants.
/// @param {Map} $systems The MDC system tokens
/// @param {Boolean} $exclude-hardcoded Whether to exclude hardcoded token values
/// @return {Map} A set of color variant token overrides for the mdc-switch
@function mdc-switch-color-variants($systems, $exclude-hardcoded) {
  @return (
    primary: (), // Default, no overrides needed
    secondary: (
      selected-focus-handle-color: map.get($systems, md-sys-color, secondary-container),
      selected-focus-icon-color: map.get($systems, md-sys-color, on-secondary-container),
      selected-focus-state-layer-color: map.get($systems, md-sys-color, secondary),
      selected-focus-track-color: map.get($systems, md-sys-color, secondary),
      selected-handle-color: map.get($systems, md-sys-color, on-secondary),
      selected-hover-handle-color: map.get($systems, md-sys-color, secondary-container),
      selected-hover-icon-color: map.get($systems, md-sys-color, on-secondary-container),
      selected-hover-state-layer-color: map.get($systems, md-sys-color, secondary),
      selected-hover-track-color: map.get($systems, md-sys-color, secondary),
      selected-icon-color: map.get($systems, md-sys-color, on-secondary-container),
      selected-pressed-handle-color: map.get($systems, md-sys-color, secondary-container),
      selected-pressed-icon-color: map.get($systems, md-sys-color, on-secondary-container),
      selected-pressed-state-layer-color: map.get($systems, md-sys-color, secondary),
      selected-pressed-track-color: map.get($systems, md-sys-color, secondary),
      selected-track-color: map.get($systems, md-sys-color, secondary),
    ),
    tertiary: (
      selected-focus-handle-color: map.get($systems, md-sys-color, tertiary-container),
      selected-focus-icon-color: map.get($systems, md-sys-color, on-tertiary-container),
      selected-focus-state-layer-color: map.get($systems, md-sys-color, tertiary),
      selected-focus-track-color: map.get($systems, md-sys-color, tertiary),
      selected-handle-color: map.get($systems, md-sys-color, on-tertiary),
      selected-hover-handle-color: map.get($systems, md-sys-color, tertiary-container),
      selected-hover-icon-color: map.get($systems, md-sys-color, on-tertiary-container),
      selected-hover-state-layer-color: map.get($systems, md-sys-color, tertiary),
      selected-hover-track-color: map.get($systems, md-sys-color, tertiary),
      selected-icon-color: map.get($systems, md-sys-color, on-tertiary-container),
      selected-pressed-handle-color: map.get($systems, md-sys-color, tertiary-container),
      selected-pressed-icon-color: map.get($systems, md-sys-color, on-tertiary-container),
      selected-pressed-state-layer-color: map.get($systems, md-sys-color, tertiary),
      selected-pressed-track-color: map.get($systems, md-sys-color, tertiary),
      selected-track-color: map.get($systems, md-sys-color, tertiary),
    ),
    error: (
      selected-focus-handle-color: map.get($systems, md-sys-color, error-container),
      selected-focus-icon-color: map.get($systems, md-sys-color, on-error-container),
      selected-focus-state-layer-color: map.get($systems, md-sys-color, error),
      selected-focus-track-color: map.get($systems, md-sys-color, error),
      selected-handle-color: map.get($systems, md-sys-color, on-error),
      selected-hover-handle-color: map.get($systems, md-sys-color, error-container),
      selected-hover-icon-color: map.get($systems, md-sys-color, on-error-container),
      selected-hover-state-layer-color: map.get($systems, md-sys-color, error),
      selected-hover-track-color: map.get($systems, md-sys-color, error),
      selected-icon-color: map.get($systems, md-sys-color, on-error-container),
      selected-pressed-handle-color: map.get($systems, md-sys-color, error-container),
      selected-pressed-icon-color: map.get($systems, md-sys-color, on-error-container),
      selected-pressed-state-layer-color: map.get($systems, md-sys-color, error),
      selected-pressed-track-color: map.get($systems, md-sys-color, error),
      selected-track-color: map.get($systems, md-sys-color, error),
    ),
  );
}

/// Generates custom token overrides for the mdc-radio color variants.
/// @param {Map} $systems The MDC system tokens
/// @param {Boolean} $exclude-hardcoded Whether to exclude hardcoded token values
/// @return {Map} A set of color variant token overrides for the mdc-radio
@function mdc-radio-color-variants($systems, $exclude-hardcoded) {
  @return (
    primary: (), // Default, no overrides needed
    secondary: (
      selected-focus-icon-color: map.get($systems, md-sys-color, secondary),
      selected-focus-state-layer-color: map.get($systems, md-sys-color, secondary),
      selected-hover-icon-color: map.get($systems, md-sys-color, secondary),
      selected-hover-state-layer-color: map.get($systems, md-sys-color, secondary),
      selected-icon-color: map.get($systems, md-sys-color, secondary),
      selected-pressed-icon-color: map.get($systems, md-sys-color, secondary),
      unselected-pressed-state-layer-color: map.get($systems, md-sys-color, secondary),
    ),
    tertiary: (
      selected-focus-icon-color: map.get($systems, md-sys-color, tertiary),
      selected-focus-state-layer-color: map.get($systems, md-sys-color, tertiary),
      selected-hover-icon-color: map.get($systems, md-sys-color, tertiary),
      selected-hover-state-layer-color: map.get($systems, md-sys-color, tertiary),
      selected-icon-color: map.get($systems, md-sys-color, tertiary),
      selected-pressed-icon-color: map.get($systems, md-sys-color, tertiary),
      unselected-pressed-state-layer-color: map.get($systems, md-sys-color, tertiary),
    ),
    error: (
      selected-focus-icon-color: map.get($systems, md-sys-color, error),
      selected-focus-state-layer-color: map.get($systems, md-sys-color, error),
      selected-hover-icon-color: map.get($systems, md-sys-color, error),
      selected-hover-state-layer-color: map.get($systems, md-sys-color, error),
      selected-icon-color: map.get($systems, md-sys-color, error),
      selected-pressed-icon-color: map.get($systems, md-sys-color, error),
      unselected-pressed-state-layer-color: map.get($systems, md-sys-color, error),
    ),
  );
}

/// Generates custom token overrides for the mdc-circular-progress color variants.
/// @param {Map} $systems The MDC system tokens
/// @param {Boolean} $exclude-hardcoded Whether to exclude hardcoded token values
/// @return {Map} A set of color variant token overrides for the mdc-circular-progress
@function mdc-circular-progress-color-variants($systems, $exclude-hardcoded) {
  @return (
    primary: (), // Default, no overrides needed
    secondary: (
      active-indicator-color: map.get($systems, md-sys-color, secondary),
    ),
    tertiary: (
      active-indicator-color: map.get($systems, md-sys-color, tertiary),
    ),
    error: (
      active-indicator-color: map.get($systems, md-sys-color, error),
    )
  );
}

/// Generates custom token overrides for the mdc-linear-progress color variants.
/// @param {Map} $systems The MDC system tokens
/// @param {Boolean} $exclude-hardcoded Whether to exclude hardcoded token values
/// @return {Map} A set of color variant token overrides for the mdc-linear-progress
@function mdc-linear-progress-color-variants($systems, $exclude-hardcoded) {
  @return (
    primary: (), // Default, no overrides needed
    secondary: (
      active-indicator-color: map.get($systems, md-sys-color, secondary),
      track-color: map.get($systems, md-sys-color, secondary-container),
    ),
    tertiary: (
      active-indicator-color: map.get($systems, md-sys-color, tertiary),
      track-color: map.get($systems, md-sys-color, tertiary-container),
    ),
    error: (
      active-indicator-color: map.get($systems, md-sys-color, error),
      track-color: map.get($systems, md-sys-color, error-container),
    ),
  );
}

/// Generates custom token overrides for the mdc-filled-form-field color variants.
/// @param {Map} $systems The MDC system tokens
/// @param {Boolean} $exclude-hardcoded Whether to exclude hardcoded token values
/// @return {Map} A set of color variant token overrides for the mdc-filled-form-field
@function mdc-filled-text-field-color-variants($systems, $exclude-hardcoded) {
  @return (
    primary: (), // Default, no overrides needed
    secondary: (
      caret-color: map.get($systems, md-sys-color, secondary),
      focus-active-indicator-color: map.get($systems, md-sys-color, secondary),
      focus-label-text-color: map.get($systems, md-sys-color, secondary),
    ),
    tertiary: (
      caret-color: map.get($systems, md-sys-color, tertiary),
      focus-active-indicator-color: map.get($systems, md-sys-color, tertiary),
      focus-label-text-color: map.get($systems, md-sys-color, tertiary),
    ),
    error: (
      caret-color: map.get($systems, md-sys-color, error),
      focus-active-indicator-color: map.get($systems, md-sys-color, error),
      focus-label-text-color: map.get($systems, md-sys-color, error),
    ),
  );
}

/// Generates custom token overrides for the mdc-outlined-form-field color variants.
/// @param {Map} $systems The MDC system tokens
/// @param {Boolean} $exclude-hardcoded Whether to exclude hardcoded token values
/// @return {Map} A set of color variant token overrides for the mdc-outlined-form-field
@function mdc-outlined-text-field-color-variants($systems, $exclude-hardcoded) {
  @return (
    primary: (), // Default, no overrides needed
    secondary: (
      caret-color: map.get($systems, md-sys-color, secondary),
      focus-label-text-color: map.get($systems, md-sys-color, secondary),
      focus-outline-color: map.get($systems, md-sys-color, secondary),
    ),
    tertiary: (
      caret-color: map.get($systems, md-sys-color, tertiary),
      focus-label-text-color: map.get($systems, md-sys-color, tertiary),
      focus-outline-color: map.get($systems, md-sys-color, tertiary),
    ),
    error: (
      caret-color: map.get($systems, md-sys-color, error),
      focus-label-text-color: map.get($systems, md-sys-color, error),
      focus-outline-color: map.get($systems, md-sys-color, error),
    ),
  );
}

/// Generates custom token overrides for the mdc-text-button color variants.
/// @param {Map} $systems The MDC system tokens
/// @param {Boolean} $exclude-hardcoded Whether to exclude hardcoded token values
/// @return {Map} A set of color variant token overrides for the mdc-text-button
@function mdc-text-button-color-variants($systems, $exclude-hardcoded) {
  @return (
    primary: (), // Default, no overrides needed.
    secondary: (
      focus-label-text-color: map.get($systems, md-sys-color, secondary),
      focus-state-layer-color: map.get($systems, md-sys-color, secondary),
      hover-label-text-color: map.get($systems, md-sys-color, secondary),
      hover-state-layer-color: map.get($systems, md-sys-color, secondary),
      label-text-color: map.get($systems, md-sys-color, secondary),
      pressed-label-text-color: map.get($systems, md-sys-color, secondary),
      pressed-state-layer-color: map.get($systems, md-sys-color, secondary),
      with-icon-focus-icon-color: map.get($systems, md-sys-color, secondary),
      with-icon-hover-icon-color: map.get($systems, md-sys-color, secondary),
      with-icon-icon-color: map.get($systems, md-sys-color, secondary),
      with-icon-pressed-icon-color: map.get($systems, md-sys-color, secondary)
    ),
    tertiary: (
      focus-label-text-color: map.get($systems, md-sys-color, tertiary),
      focus-state-layer-color: map.get($systems, md-sys-color, tertiary),
      hover-label-text-color: map.get($systems, md-sys-color, tertiary),
      hover-state-layer-color: map.get($systems, md-sys-color, tertiary),
      label-text-color: map.get($systems, md-sys-color, tertiary),
      pressed-label-text-color: map.get($systems, md-sys-color, tertiary),
      pressed-state-layer-color: map.get($systems, md-sys-color, tertiary),
      with-icon-focus-icon-color: map.get($systems, md-sys-color, tertiary),
      with-icon-hover-icon-color: map.get($systems, md-sys-color, tertiary),
      with-icon-icon-color: map.get($systems, md-sys-color, tertiary),
      with-icon-pressed-icon-color: map.get($systems, md-sys-color, tertiary)
    ),
    error: (
      focus-label-text-color: map.get($systems, md-sys-color, error),
      focus-state-layer-color: map.get($systems, md-sys-color, error),
      hover-label-text-color: map.get($systems, md-sys-color, error),
      hover-state-layer-color: map.get($systems, md-sys-color, error),
      label-text-color: map.get($systems, md-sys-color, error),
      pressed-label-text-color: map.get($systems, md-sys-color, error),
      pressed-state-layer-color: map.get($systems, md-sys-color, error),
      with-icon-focus-icon-color: map.get($systems, md-sys-color, error),
      with-icon-hover-icon-color: map.get($systems, md-sys-color, error),
      with-icon-icon-color: map.get($systems, md-sys-color, error),
      with-icon-pressed-icon-color: map.get($systems, md-sys-color, error)
    )
  );
}

/// Generates custom token overrides for the mdc-elevated-button color variants.
/// @param {Map} $systems The MDC system tokens
/// @param {Boolean} $exclude-hardcoded Whether to exclude hardcoded token values
/// @return {Map} A set of color variant token overrides for the mdc-elevated-button
@function mdc-elevated-button-color-variants($systems, $exclude-hardcoded) {
  @return (
    primary: (), // Default, no overrides needed.
    secondary: (
      focus-label-text-color: map.get($systems, md-sys-color, secondary),
      focus-state-layer-color: map.get($systems, md-sys-color, secondary),
      hover-label-text-color: map.get($systems, md-sys-color, secondary),
      hover-state-layer-color: map.get($systems, md-sys-color, secondary),
      label-text-color: map.get($systems, md-sys-color, secondary),
      pressed-label-text-color: map.get($systems, md-sys-color, secondary),
      pressed-state-layer-color: map.get($systems, md-sys-color, secondary),
      with-icon-focus-icon-color: map.get($systems, md-sys-color, secondary),
      with-icon-hover-icon-color: map.get($systems, md-sys-color, secondary),
      with-icon-icon-color: map.get($systems, md-sys-color, secondary),
      with-icon-pressed-icon-color: map.get($systems, md-sys-color, secondary)
    ),
    tertiary: (
      focus-label-text-color: map.get($systems, md-sys-color, tertiary),
      focus-state-layer-color: map.get($systems, md-sys-color, tertiary),
      hover-label-text-color: map.get($systems, md-sys-color, tertiary),
      hover-state-layer-color: map.get($systems, md-sys-color, tertiary),
      label-text-color: map.get($systems, md-sys-color, tertiary),
      pressed-label-text-color: map.get($systems, md-sys-color, tertiary),
      pressed-state-layer-color: map.get($systems, md-sys-color, tertiary),
      with-icon-focus-icon-color: map.get($systems, md-sys-color, tertiary),
      with-icon-hover-icon-color: map.get($systems, md-sys-color, tertiary),
      with-icon-icon-color: map.get($systems, md-sys-color, tertiary),
      with-icon-pressed-icon-color: map.get($systems, md-sys-color, tertiary)
    ),
    error: (
      focus-label-text-color: map.get($systems, md-sys-color, error),
      focus-state-layer-color: map.get($systems, md-sys-color, error),
      hover-label-text-color: map.get($systems, md-sys-color, error),
      hover-state-layer-color: map.get($systems, md-sys-color, error),
      label-text-color: map.get($systems, md-sys-color, error),
      pressed-label-text-color: map.get($systems, md-sys-color, error),
      pressed-state-layer-color: map.get($systems, md-sys-color, error),
      with-icon-focus-icon-color: map.get($systems, md-sys-color, error),
      with-icon-hover-icon-color: map.get($systems, md-sys-color, error),
      with-icon-icon-color: map.get($systems, md-sys-color, error),
      with-icon-pressed-icon-color: map.get($systems, md-sys-color, error)
    )
  );
}

/// Generates custom token overrides for the mdc-filled-button color variants.
/// @param {Map} $systems The MDC system tokens
/// @param {Boolean} $exclude-hardcoded Whether to exclude hardcoded token values
/// @return {Map} A set of color variant token overrides for the mdc-filled-button
@function mdc-filled-button-color-variants($systems, $exclude-hardcoded) {
  @return (
    primary: (), // Default, no overrides needed.
    secondary: (
      container-color: map.get($systems, md-sys-color, secondary),
      focus-label-text-color: map.get($systems, md-sys-color, on-secondary),
      focus-state-layer-color: map.get($systems, md-sys-color, on-secondary),
      hover-label-text-color: map.get($systems, md-sys-color, on-secondary),
      hover-state-layer-color: map.get($systems, md-sys-color, on-secondary),
      label-text-color: map.get($systems, md-sys-color, on-secondary),
      pressed-label-text-color: map.get($systems, md-sys-color, on-secondary),
      pressed-state-layer-color: map.get($systems, md-sys-color, on-secondary),
      with-icon-focus-icon-color: map.get($systems, md-sys-color, on-secondary),
      with-icon-hover-icon-color: map.get($systems, md-sys-color, on-secondary),
      with-icon-icon-color: map.get($systems, md-sys-color, on-secondary),
      with-icon-pressed-icon-color: map.get($systems, md-sys-color, on-secondary)
    ),
    tertiary: (
      container-color: map.get($systems, md-sys-color, tertiary),
      focus-label-text-color: map.get($systems, md-sys-color, on-tertiary),
      focus-state-layer-color: map.get($systems, md-sys-color, on-tertiary),
      hover-label-text-color: map.get($systems, md-sys-color, on-tertiary),
      hover-state-layer-color: map.get($systems, md-sys-color, on-tertiary),
      label-text-color: map.get($systems, md-sys-color, on-tertiary),
      pressed-label-text-color: map.get($systems, md-sys-color, on-tertiary),
      pressed-state-layer-color: map.get($systems, md-sys-color, on-tertiary),
      with-icon-focus-icon-color: map.get($systems, md-sys-color, on-tertiary),
      with-icon-hover-icon-color: map.get($systems, md-sys-color, on-tertiary),
      with-icon-icon-color: map.get($systems, md-sys-color, on-tertiary),
      with-icon-pressed-icon-color: map.get($systems, md-sys-color, on-tertiary)
    ),
    error: (
      container-color: map.get($systems, md-sys-color, error),
      focus-label-text-color: map.get($systems, md-sys-color, on-error),
      focus-state-layer-color: map.get($systems, md-sys-color, on-error),
      hover-label-text-color: map.get($systems, md-sys-color, on-error),
      hover-state-layer-color: map.get($systems, md-sys-color, on-error),
      label-text-color: map.get($systems, md-sys-color, on-error),
      pressed-label-text-color: map.get($systems, md-sys-color, on-error),
      pressed-state-layer-color: map.get($systems, md-sys-color, on-error),
      with-icon-focus-icon-color: map.get($systems, md-sys-color, on-error),
      with-icon-hover-icon-color: map.get($systems, md-sys-color, on-error),
      with-icon-icon-color: map.get($systems, md-sys-color, on-error),
      with-icon-pressed-icon-color: map.get($systems, md-sys-color, on-error)
    )
  );
}

/// Generates custom token overrides for the mdc-outlined-button color variants.
/// @param {Map} $systems The MDC system tokens
/// @param {Boolean} $exclude-hardcoded Whether to exclude hardcoded token values
/// @return {Map} A set of color variant token overrides for the mdc-outlined-button
@function mdc-outlined-button-color-variants($systems, $exclude-hardcoded) {
  @return (
    primary: (), // Default, no overrides needed.
    secondary: (
      focus-label-text-color: map.get($systems, md-sys-color, secondary),
      focus-outline-color: map.get($systems, md-sys-color, secondary),
      focus-state-layer-color: map.get($systems, md-sys-color, secondary),
      hover-label-text-color: map.get($systems, md-sys-color, secondary),
      hover-state-layer-color: map.get($systems, md-sys-color, secondary),
      label-text-color: map.get($systems, md-sys-color, secondary),
      pressed-label-text-color: map.get($systems, md-sys-color, secondary),
      pressed-state-layer-color: map.get($systems, md-sys-color, secondary),
      with-icon-focus-icon-color: map.get($systems, md-sys-color, secondary),
      with-icon-hover-icon-color: map.get($systems, md-sys-color, secondary),
      with-icon-icon-color: map.get($systems, md-sys-color, secondary),
      with-icon-pressed-icon-color: map.get($systems, md-sys-color, secondary)
    ),
    tertiary: (
      focus-label-text-color: map.get($systems, md-sys-color, tertiary),
      focus-outline-color: map.get($systems, md-sys-color, tertiary),
      focus-state-layer-color: map.get($systems, md-sys-color, tertiary),
      hover-label-text-color: map.get($systems, md-sys-color, tertiary),
      hover-state-layer-color: map.get($systems, md-sys-color, tertiary),
      label-text-color: map.get($systems, md-sys-color, tertiary),
      pressed-label-text-color: map.get($systems, md-sys-color, tertiary),
      pressed-state-layer-color: map.get($systems, md-sys-color, tertiary),
      with-icon-focus-icon-color: map.get($systems, md-sys-color, tertiary),
      with-icon-hover-icon-color: map.get($systems, md-sys-color, tertiary),
      with-icon-icon-color: map.get($systems, md-sys-color, tertiary),
      with-icon-pressed-icon-color: map.get($systems, md-sys-color, tertiary)
    ),
    error: (
      focus-label-text-color: map.get($systems, md-sys-color, error),
      focus-outline-color: map.get($systems, md-sys-color, error),
      focus-state-layer-color: map.get($systems, md-sys-color, error),
      hover-label-text-color: map.get($systems, md-sys-color, error),
      hover-state-layer-color: map.get($systems, md-sys-color, error),
      label-text-color: map.get($systems, md-sys-color, error),
      pressed-label-text-color: map.get($systems, md-sys-color, error),
      pressed-state-layer-color: map.get($systems, md-sys-color, error),
      with-icon-focus-icon-color: map.get($systems, md-sys-color, error),
      with-icon-hover-icon-color: map.get($systems, md-sys-color, error),
      with-icon-icon-color: map.get($systems, md-sys-color, error),
      with-icon-pressed-icon-color: map.get($systems, md-sys-color, error)
    )
  );
}

