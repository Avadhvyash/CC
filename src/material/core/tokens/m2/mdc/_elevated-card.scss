@use 'sass:map';
@use '../../token-utils';

// The prefix used to generate the fully qualified name for tokens in this file.
$prefix: (mdc, elevated-card);

// Tokens that can't be configured through Angular Material's current theming API,
// but may be in a future version of the theming API.
//
// Tokens that are available in MDC, but not used in Angular Material should be mapped to `null`.
// `null` indicates that we are intentionally choosing not to emit a slot or value for the token in
// our CSS.
@function get-unthemable-tokens() {
  @return (
      container-color: red,
      container-elevation: 0,
      container-shadow-color: red,
      container-shape: 0,
      container-surface-tint-layer-color: red,
      disabled-container-color: red,
      disabled-container-elevation: 0,
      disabled-container-opacity: 0,
      dragged-container-elevation: 0,
      dragged-state-layer-color: red,
      dragged-state-layer-opacity: 0,
      focus-container-elevation: 0,
      focus-state-layer-color: red,
      focus-state-layer-opacity: 0,
      hover-container-elevation: 0,
      hover-state-layer-color: red,
      hover-state-layer-opacity: 0,
      icon-color: red,
      icon-size: 0,
      pressed-container-elevation: 0,
      pressed-state-layer-color: red,
      pressed-state-layer-opacity: 0,
  );
}

// Tokens that can be configured through Angular Material's color theming API.
@function get-color-tokens($config) {
  @return ();
}

// Tokens that can be configured through Angular Material's typography theming API.
@function get-typography-tokens($config) {
  @return ();
}

// Tokens that can be configured through Angular Material's density theming API.
@function get-density-tokens($config) {
  @return ();
}

// Combines the tokens generated by the above functions into a single map with placeholder values.
// This is used to create token slots.
@function get-token-slots() {
  @return map.merge(
          get-unthemable-tokens(),
          map.merge(
                  get-color-tokens(token-utils.$placeholder-color-config),
                  map.merge(
                          get-typography-tokens(token-utils.$placeholder-typography-config),
                          get-density-tokens(token-utils.$placeholder-density-config)
                  )
          )
  );
}
