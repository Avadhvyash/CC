@import '../theming/theming';
@import '../style/layout-common';

/// Mixin that turns on strong focus indicators. This mixin should only be
/// included once in your app.
///
/// @param {map} $config
///   If given, customizes focus indicators with the configuration. The
///   configuration map accepts border-style, border-color, border-width,
///   border-radius, and margin. If a given parameter is omitted, this
///   mixin provides a default value. More on each parameter:
///
///   border-style: Focus indicator line style (e.g. solid, dashed, etc).
///   border-color: Focus indicator color.
///   border-width: Focus indicator thickness.
///   border-radius: Focus indicator shape.
///   margin: Focus indicator inset/offset. Positive margin moves the focus
///       indicator inwards, negative margin moves it outwards.
///
/// @example
///   .my-app {
///     @include mat-strong-focus-indicators((
///       border-style: solid,
///       border-color: blue,
///       border-width: 2px,
///       border-radius: 4px,
///       margin: 0px,
///     ));
///   }
@mixin mat-strong-focus-indicators($config: ()) {
  // Default focus indicator config.
  $default-config: (
    border-style: solid,
    border-color: black,
    border-width: 3px,
    border-radius: 4px,
    // Default margin config depends on the border-width and the component.
  );

  // Base styles for focus indicators.
  .mat-focus-indicator::before {
    @include mat-fill();
    box-sizing: border-box;
    pointer-events: none;
  }

  // Merge default config with user config.
  $config: map-merge($default-config, $config);

  // Style focus indicators per the composed config.
  @include mat-strong-focus-indicator-customize($config);

  // If no margin is given, apply a default. For most components, focus
  // indicators are flush with the bounding box. However, for particular
  // components (listed below), focus indicators are shifted inwards/outwards
  // to ensure they have sufficient contrast and render appropriately.
  @if not map-has-key($config, margin) {
    // Default margins depend upon the focus indicator's thickness.
    $border-width: map-get($config, border-width);

    .mat-flat-button,
    .mat-raised-button,
    .mat-fab,
    .mat-mini-fab,
    .mat-chip,
    .mat-sort-header-button {
      @include mat-strong-focus-indicator-customize(
          $config: (margin: -($border-width + 2px)),
          $cascade: false,
      );
    }

    .mat-stroked-button {
      @include mat-strong-focus-indicator-customize(
          $config: (margin: -($border-width + 3px)),
          $cascade: false,
      );
    }

    .mat-calendar-body-cell {
      @include mat-strong-focus-indicator-customize(
          $config: (margin: -($border-width)),
          $cascade: false,
      );
    }

    .mat-tab-link,
    .mat-tab-label {
      @include mat-strong-focus-indicator-customize(
          $config: (margin: 5px),
          $cascade: false,
      );
    }
  }

  // Render the focus indicator on focus. Defining a pseudo element's
  // content will cause it to render.

  // For checkboxes, radios, and slide toggles, render the focus indicator
  // when the class .cdk-focused is present.
  .cdk-focused.mat-checkbox .mat-focus-indicator::before,
  .cdk-focused.mat-radio-button .mat-focus-indicator::before,
  .cdk-focused.mat-slide-toggle .mat-focus-indicator::before,

  // For options, render the focus indicator when the class .mat-active
  // is present.
  .mat-focus-indicator.mat-option.mat-active::before,

  // For all other components, render the focus indicator on focus.
  .mat-focus-indicator:focus::before {
    content: '';
  }
}

/// Mixin that customizes focus indicators. This mixin may be included
/// multiple times throughout your app.
///
/// @param {map} $config
///   If given, customizes focus indicators with the configuration. The
///   configuration map accepts border-style, border-color, border-width,
///   border-radius, and margin. See the SassDoc annotation for
///   mat-strong-focus-indicator for more on each parameter.
///
/// @param {boolean} $cascade
///   If true, the focus indicator customizations will apply to the
///   entire element subtree. Otherwise, they only apply to the selector
///   hosting the mixin. Defaults to true.
///
/// @example
///   .my-component {
///     @include mat-strong-focus-indicator-customize((
///       border-radius: 50%,
///       color: red,
///     ));
///   }
@mixin mat-strong-focus-indicator-customize($config: (), $cascade: true) {
  $config-keys: (
    border-color,
    border-style,
    border-width,
    border-radius,
    margin,
  );
  $selector: if($cascade,
      '.mat-focus-indicator::before',
      '&.mat-focus-indicator::before');

  #{$selector} {
    @each $key in $config-keys {
      $value: map-get($config, $key);

      @if ($key and $value) {
        #{$key}: #{$value};
      }
    }
  }
}
