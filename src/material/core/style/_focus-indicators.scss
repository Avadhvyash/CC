// Mixin that renders the focus indicator structural styles.
@mixin private-structural-styling($prefix) {
  position: relative;

  &::before {
    @include layout-common.fill();
    box-sizing: border-box;
    pointer-events: none;
    border: var(
        --#{$prefix}-focus-indicator-border-width,
        $private-default-focus-indicator-border-width
      )
      var(--#{$prefix}-focus-indicator-border-style, $private-default-focus-indicator-border-style)
      var(--#{$prefix}-focus-indicator-border-color, $private-default-focus-indicator-border-color);
    border-radius: var(
      --#{$prefix}-focus-indicator-border-radius,
      $private-default-focus-indicator-border-radius
    );
  }
}

// Mixin that handles null values and defines CSS variables accordingly.
@mixin private-create-variable($name, $value) {
  @if ($value) {
    --#{$name}: #{$value};
  }
}

// Mixin that dedups CSS Variables for the strong-focus-indicators mixin.
@mixin private-strong-focus-indicators-helper($config, $prefix) {
  $border-style: map.get($config, border-style);
  $border-width: map.get($config, border-width);
  $border-radius: map.get($config, border-radius);
  $border-color: map.get($config, border-color);

  @include _create-variable('#{$prefix}-focus-indicator-border-style', $border-style);
  @include _create-variable('#{$prefix}-focus-indicator-border-width', $border-width);
  @include _create-variable('#{$prefix}-focus-indicator-border-radius', $border-radius);
  @include _create-variable('#{$prefix}-focus-indicator-border-color', $border-color);
}
